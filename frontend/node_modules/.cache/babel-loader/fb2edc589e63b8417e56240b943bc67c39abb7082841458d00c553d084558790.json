{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elbri\\\\Desktop\\\\Projetos de entrevistas\\\\entrevista_hub\\\\frontend\\\\src\\\\components\\\\ImportacaoPedidos.js\",\n  _s = $RefreshSig$();\n// Importa as bibliotecas React e hooks useState.\nimport React, { useState } from 'react';\n// Importa a configuração do axios.\nimport axios from '../axiosConfig';\n// Importa o hook useNavigate do react-router-dom para navegação.\nimport { useNavigate } from 'react-router-dom';\n// Importa o arquivo CSS para estilização.\nimport '../ImportacaoPedidos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportacaoPedidos = () => {\n  _s();\n  // Define os estados para o arquivo, nome do arquivo e estado de carregamento.\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"Nenhum arquivo escolhido\");\n  const [isLoading, setIsLoading] = useState(false);\n  // Inicializa o hook de navegação.\n  const navigate = useNavigate();\n\n  // Função para lidar com a mudança de arquivo.\n  const handleFileChange = e => {\n    // Atualiza o estado com o arquivo selecionado.\n    setFile(e.target.files[0]);\n    // Atualiza o nome do arquivo ou define um texto padrão se nenhum arquivo for escolhido.\n    setFileName(e.target.files[0] ? e.target.files[0].name : \"Nenhum arquivo escolhido\");\n  };\n\n  // Função para lidar com o upload do arquivo.\n  const handleUpload = async () => {\n    if (!file) {\n      // Alerta o usuário se nenhum arquivo for selecionado.\n      alert('Por favor, selecione um arquivo antes de fazer o upload.');\n      return;\n    }\n\n    // Cria um objeto FormData e adiciona o arquivo.\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsLoading(true); // Define o estado de carregamento como verdadeiro.\n\n    try {\n      // Faz a solicitação POST para enviar o arquivo para a API.\n      await axios.post('/api/Pedidos/import', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // Alerta o usuário sobre o sucesso da importação.\n      alert('Pedidos importados com sucesso!');\n      // Redireciona para a página de exibição de dados.\n      navigate('/exibicao');\n    } catch (error) {\n      // Loga um erro no console e alerta o usuário se a importação falhar.\n      console.error('Erro ao importar pedidos', error);\n      alert('Erro ao importar pedidos');\n    } finally {\n      // Define o estado de carregamento como falso.\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"import-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Importar Pedidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Use esta p\\xE1gina para importar pedidos atrav\\xE9s de arquivos excel CSV. Certifique-se de que o arquivo est\\xE1 no formato correto antes de fazer o upload.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bem-vindo ao sistema de importa\\xE7\\xE3o de pedidos da HubCount! Aqui voc\\xEA pode carregar seus pedidos atrav\\xE9s de arquivos CSV. Verifique se o arquivo est\\xE1 no formato correto antes de fazer o upload. Ap\\xF3s a importa\\xE7\\xE3o, voc\\xEA poder\\xE1 visualizar os dados importados na p\\xE1gina de Exibi\\xE7\\xE3o de Dados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Para come\\xE7ar, clique em \\\"Escolher arquivo\\\" para selecionar o arquivo desejado e em seguida clique em \\\"Carregar\\\" para importar os pedidos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-input-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"upload-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Carregando...' : 'Carregar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-link\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"../Planilha_exemplo.csv\",\n        download: true,\n        children: \"Baixar Planilha de Exemplo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n// Exporta o componente ImportacaoPedidos como padrão para ser usado em outros arquivos.\n_s(ImportacaoPedidos, \"+PDSEEJkOCmwl4TgLbmfvQfVGpM=\", false, function () {\n  return [useNavigate];\n});\n_c = ImportacaoPedidos;\nexport default ImportacaoPedidos;\nvar _c;\n$RefreshReg$(_c, \"ImportacaoPedidos\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ImportacaoPedidos","_s","file","setFile","fileName","setFileName","isLoading","setIsLoading","navigate","handleFileChange","e","target","files","name","handleUpload","alert","formData","FormData","append","post","headers","error","console","className","children","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","accept","onClick","disabled","href","download","_c","$RefreshReg$"],"sources":["C:/Users/elbri/Desktop/Projetos de entrevistas/entrevista_hub/frontend/src/components/ImportacaoPedidos.js"],"sourcesContent":["// Importa as bibliotecas React e hooks useState.\r\nimport React, { useState } from 'react';\r\n// Importa a configuração do axios.\r\nimport axios from '../axiosConfig';\r\n// Importa o hook useNavigate do react-router-dom para navegação.\r\nimport { useNavigate } from 'react-router-dom';\r\n// Importa o arquivo CSS para estilização.\r\nimport '../ImportacaoPedidos.css';\r\n\r\nconst ImportacaoPedidos = () => {\r\n    // Define os estados para o arquivo, nome do arquivo e estado de carregamento.\r\n    const [file, setFile] = useState(null);\r\n    const [fileName, setFileName] = useState(\"Nenhum arquivo escolhido\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // Inicializa o hook de navegação.\r\n    const navigate = useNavigate();\r\n\r\n    // Função para lidar com a mudança de arquivo.\r\n    const handleFileChange = (e) => {\r\n        // Atualiza o estado com o arquivo selecionado.\r\n        setFile(e.target.files[0]);\r\n        // Atualiza o nome do arquivo ou define um texto padrão se nenhum arquivo for escolhido.\r\n        setFileName(e.target.files[0] ? e.target.files[0].name : \"Nenhum arquivo escolhido\");\r\n    };\r\n\r\n    // Função para lidar com o upload do arquivo.\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            // Alerta o usuário se nenhum arquivo for selecionado.\r\n            alert('Por favor, selecione um arquivo antes de fazer o upload.');\r\n            return;\r\n        }\r\n\r\n        // Cria um objeto FormData e adiciona o arquivo.\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        setIsLoading(true); // Define o estado de carregamento como verdadeiro.\r\n\r\n        try {\r\n            // Faz a solicitação POST para enviar o arquivo para a API.\r\n            await axios.post('/api/Pedidos/import', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            // Alerta o usuário sobre o sucesso da importação.\r\n            alert('Pedidos importados com sucesso!');\r\n            // Redireciona para a página de exibição de dados.\r\n            navigate('/exibicao');\r\n        } catch (error) {\r\n            // Loga um erro no console e alerta o usuário se a importação falhar.\r\n            console.error('Erro ao importar pedidos', error);\r\n            alert('Erro ao importar pedidos');\r\n        } finally {\r\n            // Define o estado de carregamento como falso.\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"import-container\">\r\n            <h1>Importar Pedidos</h1>\r\n            <p>\r\n                Use esta página para importar pedidos através de arquivos excel CSV. \r\n                Certifique-se de que o arquivo está no formato correto antes de fazer o upload.\r\n            </p>\r\n            <div className=\"description\">\r\n                <p>\r\n                    Bem-vindo ao sistema de importação de pedidos da HubCount! Aqui você pode carregar seus pedidos \r\n                    através de arquivos CSV. Verifique se o arquivo está no formato correto antes de fazer o upload.\r\n                    Após a importação, você poderá visualizar os dados importados na página de Exibição de Dados.\r\n                </p>\r\n                <p>\r\n                    Para começar, clique em \"Escolher arquivo\" para selecionar o arquivo desejado e em seguida clique em \"Carregar\" para importar os pedidos.\r\n                </p>\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label htmlFor=\"file-upload\" className=\"file-input-label\">\r\n                    {/* Input para seleção do arquivo */}\r\n                    <input \r\n                        id=\"file-upload\"\r\n                        type=\"file\" \r\n                        onChange={handleFileChange} \r\n                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" \r\n                        className=\"file-input\"\r\n                    />\r\n                    {/* Exibe o nome do arquivo selecionado */}\r\n                    {fileName}\r\n                </label>\r\n                {/* Botão para carregar o arquivo */}\r\n                <button onClick={handleUpload} className=\"upload-button\" disabled={isLoading}>\r\n                    {isLoading ? 'Carregando...' : 'Carregar'}\r\n                </button>\r\n            </div>\r\n            <div className=\"download-link\">\r\n                {/* Link para baixar a planilha de exemplo */}\r\n                <a href=\"../Planilha_exemplo.csv\" download>Baixar Planilha de Exemplo</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Exporta o componente ImportacaoPedidos como padrão para ser usado em outros arquivos.\r\nexport default ImportacaoPedidos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}